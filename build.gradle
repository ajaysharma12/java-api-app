
apply plugin: 'java'

apply plugin: 'protobuf'
apply plugin: 'war'
apply plugin: 'jetty'

// IDE
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'

// The Gradle wrapper.
task wrapper(type: Wrapper) {
  gradleVersion = '2.1'
}

// Compile with -Xlint
if (!hasProperty('nolint')) {
  tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:all"
  }
}

// Sources.
sourceSets {
  main {
    java {
      srcDir 'src/main/java'
    }
    resources {
      srcDir 'src/main/resources'
      srcDir 'src/main/webapp'
    }
  }
  generated {
    java.srcDirs += "$buildDir/$protobuf.outputJava"
  }
}

task createDirs << {
  sourceSets*.java.srcDirs*.each { it.mkdirs() }
  sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

// Repositories for dependencies.
buildscript {
  repositories {
    mavenCentral()
  }

  dependencies {
    classpath 'com.andrewkroh.gradle:gradle-protobuf-plugin:0.3.0'
  }
}

repositories {
  mavenCentral()
  mavenLocal()
}

// Application dependencies.
dependencies {
  compile 'com.google.code.findbugs:jsr305:2.0.3'
  compile 'com.google.code.gson:gson:2.+'
  compile 'com.google.guava:guava:18.0'
  compile 'com.google.inject.extensions:guice-servlet:3.0'
  compile 'com.google.inject:guice:3.0'
  compile 'com.google.protobuf:protobuf-java:2.+'
  compile 'com.sun.jersey.contribs:jersey-guice:1.+'
  compile 'com.sun.jersey:jersey-core:1.+'
  compile 'com.sun.jersey:jersey-server:1.+'
  compile 'com.sun.jersey:jersey-servlet:1.+'
  compile 'commons-codec:commons-codec:1.+'
  compile 'in.ajsd:java-jwt:1.0-pre'
  compile 'javax.annotation:jsr250-api:1.+'
  compile 'javax.ws.rs:jsr311-api:1.1.1'
  compile 'joda-time:joda-time:2.+'
  compile 'org.apache.commons:commons-lang3:3.3.+'
  compile 'org.apache.logging.log4j:log4j-api:2.+'
  compile 'org.apache.logging.log4j:log4j-core:2.+'
  compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.+'
  compile 'org.slf4j:slf4j-api:1.+'
  compile 'redis.clients:jedis:2.+'
  providedCompile 'javax.servlet:servlet-api:3.+'
  testCompile 'com.google.truth:truth:0.23'
  testCompile 'junit:junit:4.+'
}

// The WAR.
war {
  baseName = ""  // name of the WAR and context path.
}

// Jetty
jettyRun {
  reload = "automatic"
  scanIntervalSeconds = 1
}

// Misc
configurations.all {
  exclude module: 'slf4j-log4j12'
}
